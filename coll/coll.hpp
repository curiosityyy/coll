#pragma once
// c
#include <cstring>
// c++
#include <array>
#include <iterator>

#include "base.hpp"
#include "lambda.hpp"
#include "traits.hpp"
// source
#include "iterate.hpp"
#include "range.hpp"
// pipeline
#include "any_all.hpp"
#include "branch.hpp"
#include "concat.hpp"
#include "distinct.hpp"
#include "filter.hpp"
#include "flatmap.hpp"
#include "groupby.hpp"
#include "if_else.hpp"
#include "init_tail.hpp"
#include "inspect.hpp"
#include "link.hpp"
#include "map.hpp"
// #include "parallel.hpp"
// #include "parallel_partition.hpp"
#include "partition.hpp"
#include "reverse.hpp"
#include "sort.hpp"
#include "split.hpp"
#include "take_while.hpp"
#include "traversal.hpp"
#include "unique.hpp"
#include "unwrap.hpp"
#include "window.hpp"
#include "zip_with_index.hpp"
// sink
#include "aggregate.hpp"
#include "aggregate_sinks.hpp"
#include "foreach.hpp"
#include "head.hpp"
#include "last.hpp"
#include "print.hpp"
#include "to.hpp"
#include "to_iter.hpp"
#include "to_std_containers.hpp"
