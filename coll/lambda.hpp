#pragma once
/**
 * Generated by examples/lambda_generator.cpp
 * anony stands for anonymous
 * r stands for reference
 * c stands for copy
 * a stands for any
 * v stands for void
 * m stands for mutable
 **/
#define anony_v(...)    ([ ](        )                           { __VA_ARGS__; })
#define anony_c(...)    ([ ](        )                           { return (__VA_ARGS__); })
#define anony_r(...)    ([ ](        ) -> auto&                  { return (__VA_ARGS__); })
#define anony_a(...)    ([ ](        ) -> decltype(auto)         { return (__VA_ARGS__); })
#define anonyr_v(...)   ([&](        )                           { __VA_ARGS__; })
#define anonyr_c(...)   ([&](        )                           { return (__VA_ARGS__); })
#define anonyr_r(...)   ([&](        ) -> auto&                  { return (__VA_ARGS__); })
#define anonyr_a(...)   ([&](        ) -> decltype(auto)         { return (__VA_ARGS__); })
#define anonyc_v(...)   ([=](        )                           { __VA_ARGS__; })
#define anonyc_vm(...)  ([=](        )                   mutable { __VA_ARGS__; })
#define anonyc_c(...)   ([=](        )                           { return (__VA_ARGS__); })
#define anonyc_cm(...)  ([=](        )                   mutable { return (__VA_ARGS__); })
#define anonyc_r(...)   ([=](        ) -> auto&                  { return (__VA_ARGS__); })
#define anonyc_rm(...)  ([=](        ) -> auto&          mutable { return (__VA_ARGS__); })
#define anonyc_a(...)   ([=](        ) -> decltype(auto)         { return (__VA_ARGS__); })
#define anonyc_am(...)  ([=](        ) -> decltype(auto) mutable { return (__VA_ARGS__); })
#define anony_cv(...)   ([ ](auto   _)                           { __VA_ARGS__; })
#define anony_cc(...)   ([ ](auto   _)                           { return (__VA_ARGS__); })
#define anony_cr(...)   ([ ](auto   _) -> auto&                  { return (__VA_ARGS__); })
#define anony_ca(...)   ([ ](auto   _) -> decltype(auto)         { return (__VA_ARGS__); })
#define anonyr_cv(...)  ([&](auto   _)                           { __VA_ARGS__; })
#define anonyr_cc(...)  ([&](auto   _)                           { return (__VA_ARGS__); })
#define anonyr_cr(...)  ([&](auto   _) -> auto&                  { return (__VA_ARGS__); })
#define anonyr_ca(...)  ([&](auto   _) -> decltype(auto)         { return (__VA_ARGS__); })
#define anonyc_cv(...)  ([=](auto   _)                           { __VA_ARGS__; })
#define anonyc_cvm(...) ([=](auto   _)                   mutable { __VA_ARGS__; })
#define anonyc_cc(...)  ([=](auto   _)                           { return (__VA_ARGS__); })
#define anonyc_ccm(...) ([=](auto   _)                   mutable { return (__VA_ARGS__); })
#define anonyc_cr(...)  ([=](auto   _) -> auto&                  { return (__VA_ARGS__); })
#define anonyc_crm(...) ([=](auto   _) -> auto&          mutable { return (__VA_ARGS__); })
#define anonyc_ca(...)  ([=](auto   _) -> decltype(auto)         { return (__VA_ARGS__); })
#define anonyc_cam(...) ([=](auto   _) -> decltype(auto) mutable { return (__VA_ARGS__); })
#define anony_rv(...)   ([ ](auto&  _)                           { __VA_ARGS__; })
#define anony_rc(...)   ([ ](auto&  _)                           { return (__VA_ARGS__); })
#define anony_rr(...)   ([ ](auto&  _) -> auto&                  { return (__VA_ARGS__); })
#define anony_ra(...)   ([ ](auto&  _) -> decltype(auto)         { return (__VA_ARGS__); })
#define anonyr_rv(...)  ([&](auto&  _)                           { __VA_ARGS__; })
#define anonyr_rc(...)  ([&](auto&  _)                           { return (__VA_ARGS__); })
#define anonyr_rr(...)  ([&](auto&  _) -> auto&                  { return (__VA_ARGS__); })
#define anonyr_ra(...)  ([&](auto&  _) -> decltype(auto)         { return (__VA_ARGS__); })
#define anonyc_rv(...)  ([=](auto&  _)                           { __VA_ARGS__; })
#define anonyc_rvm(...) ([=](auto&  _)                   mutable { __VA_ARGS__; })
#define anonyc_rc(...)  ([=](auto&  _)                           { return (__VA_ARGS__); })
#define anonyc_rcm(...) ([=](auto&  _)                   mutable { return (__VA_ARGS__); })
#define anonyc_rr(...)  ([=](auto&  _) -> auto&                  { return (__VA_ARGS__); })
#define anonyc_rrm(...) ([=](auto&  _) -> auto&          mutable { return (__VA_ARGS__); })
#define anonyc_ra(...)  ([=](auto&  _) -> decltype(auto)         { return (__VA_ARGS__); })
#define anonyc_ram(...) ([=](auto&  _) -> decltype(auto) mutable { return (__VA_ARGS__); })
#define anony_av(...)   ([ ](auto&& _)                           { __VA_ARGS__; })
#define anony_ac(...)   ([ ](auto&& _)                           { return (__VA_ARGS__); })
#define anony_ar(...)   ([ ](auto&& _) -> auto&                  { return (__VA_ARGS__); })
#define anony_aa(...)   ([ ](auto&& _) -> decltype(auto)         { return (__VA_ARGS__); })
#define anonyr_av(...)  ([&](auto&& _)                           { __VA_ARGS__; })
#define anonyr_ac(...)  ([&](auto&& _)                           { return (__VA_ARGS__); })
#define anonyr_ar(...)  ([&](auto&& _) -> auto&                  { return (__VA_ARGS__); })
#define anonyr_aa(...)  ([&](auto&& _) -> decltype(auto)         { return (__VA_ARGS__); })
#define anonyc_av(...)  ([=](auto&& _)                           { __VA_ARGS__; })
#define anonyc_avm(...) ([=](auto&& _)                   mutable { __VA_ARGS__; })
#define anonyc_ac(...)  ([=](auto&& _)                           { return (__VA_ARGS__); })
#define anonyc_acm(...) ([=](auto&& _)                   mutable { return (__VA_ARGS__); })
#define anonyc_ar(...)  ([=](auto&& _) -> auto&                  { return (__VA_ARGS__); })
#define anonyc_arm(...) ([=](auto&& _) -> auto&          mutable { return (__VA_ARGS__); })
#define anonyc_aa(...)  ([=](auto&& _) -> decltype(auto)         { return (__VA_ARGS__); })
#define anonyc_aam(...) ([=](auto&& _) -> decltype(auto) mutable { return (__VA_ARGS__); })
