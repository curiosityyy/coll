cmake_minimum_required(VERSION 3.5)
project(cpp-collection)

if (POLICY CMP0074)
  cmake_policy(SET CMP0074 NEW)
endif ()

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/modules/")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra")
if (CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-maybe-uninitialized")
endif ()

if (NOT DEFINED ENABLE_TEST)
  set(ENABLE_TEST true)
endif ()
message("-- ENABLE_TEST: " ${ENABLE_TEST})
if (NOT DEFINED ENABLE_PARALLEL)
  set(ENABLE_PARALLEL true)
endif ()
message("-- ENABLE_PARALLEL: " ${ENABLE_PARALLEL})
set(BasicLibs pthread rt)

if (${ENABLE_PARALLEL})
  add_definitions(-DENABLE_PARALLEL=1)
  if (DEFINED ENV{ZAF_ROOT})
    set(ZAF_ROOT_DIR $ENV{ZAF_ROOT})
  endif ()
  find_package(ZAF REQUIRED)
  include_directories(${ZAF_INCLUDE_DIR} ${ZAF_DEPS_HEADERS})
  set(ExtLibs ${ExtLibs} ${ZAF_LIBRARY} ${ZAF_DEPS_LIBS})
  if (${ZAF_USE_PHMAP})
    add_definitions(-DENABLE_PHMAP=1)
  endif()
  message("-- ENABLE_PHMAP: " ${ZAF_USE_PHMAP})
endif()

if (${ENABLE_TEST})
  if (DEFINED ENV{GTEST_ROOT})
    set(GTEST_ROOT $ENV{GTEST_ROOT})
  endif ()

  find_package(GTest)
  include_directories(${GTEST_INCLUDE_DIR})
  set(TestLibs ${GTEST_LIBRARY})

  add_subdirectory(tests)
endif ()

add_subdirectory(benchmarks)
add_subdirectory(examples)
